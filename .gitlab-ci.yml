image: buildstream/buildstream-fedora:master-46-dbed35e

cache:
  paths:
    - cache/buildstream/sources/

stages:
  - test
  - docs

before_script:
  # Diagnostics
  - mount
  - df -h

  # Store cache in the project directory
  - if [ -d "$(pwd)/cache" ]; then chmod -R a+rw "$(pwd)/cache"; fi
  - export XDG_CACHE_HOME="$(pwd)/cache"
  - adduser -m buildstream
  - chown -R buildstream:buildstream .

  - pip3 install requests

integration_linux:
  stage: test

  script:
    - pip3 install --no-index .
    - cd integration-tests

    # We run as a simple user to test for permission issues
    - su buildstream -c './run-test.sh --arg --colors --cov ../.coveragerc --sources ${XDG_CACHE_HOME}/buildstream/sources test'

    - cd ..
    - mkdir -p coverage-linux/
    - cp integration-tests/.coverage coverage-linux/coverage.linux
    - cp -a integration-tests/tmp/logs logs-linux

  artifacts:
    paths:
    - coverage-linux/
    - logs-linux/

integration_unix:
  stage: test
  variables:
    BST_FORCE_BACKEND: "unix"
  script:
    - pip3 install --no-index .
    - cd integration-tests

    # Since the unix platform is required to run as root, no user change required
    - ./run-test.sh --arg --colors --cov ../.coveragerc --sources ${XDG_CACHE_HOME}/buildstream/sources test

    - cd ..
    - mkdir -p coverage-unix/
    - cp integration-tests/.coverage coverage-unix/coverage.unix
    - cp -a integration-tests/tmp/logs logs-unix

  artifacts:
    paths:
    - coverage-unix/
    - logs-unix/

# Automatically build documentation, only for merges which land
# on master branch.
#
# Note: We still do not enforce a consistent installation of python2
#       or sphinx, as python2 will significantly grow the backing image.
#
pages:
  stage: docs
  script:
  - dnf install -y python2
  - pip3 install sphinx
  - pip3 install sphinx-click
  - pip3 install --user .
  - make -C doc
  - mv doc/build/html public
  artifacts:
    paths:
    - public/
  only:
  - master
